---
- name: Update the package index
  apt:
    update_cache: yes

- name: Install required packages for web server
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - openssh-server
    - sudo
    - python3
    - python3-pip
    - python3-venv
    - gunicorn
    - nginx
    - pkg-config
    - default-libmysqlclient-dev
  tags: web_packages

- name: Create a virtual environment for Python packages
  command: python3 -m venv /opt/python-venv
  args:
    creates: /opt/python-venv
  tags: venv

- name: Set the Python interpreter for Ansible
  set_fact:
    ansible_python_interpreter: /opt/python-venv/bin/python

- name: Create application directory
  file:
    path: "/opt/gunicorn_app"
    state: directory
    mode: '0755'
  tags: setup

- name: Copy application file
  copy:
    src: app.py
    dest: "/opt/gunicorn_app/"
    mode: '0755'
  tags: setup

- name: Set up virtual environment
  command: python3 -m venv /opt/gunicorn_app/venv
  tags: venv

- name: Install Flask, Gunicorn, and other dependencies in virtual environment
  command: "/opt/gunicorn_app/venv/bin/pip install Flask gunicorn mysql-connector-python flask-mysqldb"
  tags: dependencies

- name: Set environment variables for Flask app
  copy:
    dest: /etc/environment
    content: |
      MYSQL_DATABASE_HOST={{ db_server_ip }}  # Uses the internal IP address passed from deploy_app.yml
      MYSQL_DATABASE_USER={{ db_user }}
      MYSQL_DATABASE_PASSWORD={{ db_password }}
      MYSQL_DATABASE_DB={{ db_name }}
  become: yes
  tags: environment_variables
  notify: Restart Gunicorn

- name: Set permissions for /etc/environment
  file:
    path: /etc/environment
    owner: root
    group: root
    mode: '0644'
  become: yes
  tags: environment_variables

- name: Reload environment variables
  shell: ". /etc/environment"
  become: yes
  tags: environment_variables

# Gunicorn Service Setup
- name: Create Gunicorn systemd service file
  copy:
    dest: /etc/systemd/system/gunicorn.service
    content: |
      [Unit]
      Description=Gunicorn instance to serve Flask app
      After=network.target

      [Service]
      User=www-data
      Group=www-data
      WorkingDirectory=/opt/gunicorn_app
      ExecStart=/opt/gunicorn_app/venv/bin/gunicorn -w 4 -b 0.0.0.0:5000 app:app

      [Install]
      WantedBy=multi-user.target
  tags: gunicorn_service
  notify: Restart Gunicorn

- name: Reload systemd daemon to recognize new Gunicorn service
  command: systemctl daemon-reload
  tags: gunicorn_service

- name: Enable and start Gunicorn service
  systemd:
    name: gunicorn
    enabled: yes
    state: started
  tags: gunicorn_service

# Nginx Setup for Reverse Proxy
- name: Create Nginx configuration for Flask app
  copy:
    dest: /etc/nginx/sites-available/flask_app
    content: |
      server {
          listen 80;
          server_name {{ ansible_host }};

          location / {
              proxy_pass http://127.0.0.1:5000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
  tags: nginx
  notify: Restart Nginx

- name: Enable Nginx configuration
  file:
    src: /etc/nginx/sites-available/flask_app
    dest: /etc/nginx/sites-enabled/flask_app
    state: link
  tags: nginx

- name: Test Nginx configuration
  command: nginx -t
  tags: nginx

- name: Restart Nginx to apply changes
  service:
    name: nginx
    state: restarted
  tags: nginx

